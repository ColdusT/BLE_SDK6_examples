Component: ARM Compiler 6.15 Tool: armlink [5dd79300]

==============================================================================

Section Cross References

    hal_entry.o(.text.hal_entry) refers to bsp_common.o(.text.R_FSP_VersionGet) for R_FSP_VersionGet
    hal_entry.o(.text.hal_entry) refers to uart_ep.o(.text.uart_initialize) for uart_initialize
    hal_entry.o(.text.hal_entry) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    hal_entry.o(.text.hal_entry) refers to uart_ep.o(.text.uart_ep_demo) for uart_ep_demo
    hal_entry.o(.text.hal_entry) refers to uart_ep.o(.text.deinit_uart) for deinit_uart
    hal_entry.o(.text.hal_entry) refers to bsp_io.o(.bss.g_protect_pfswe_counter) for g_protect_pfswe_counter
    hal_entry.o(.ARM.exidx.text.hal_entry) refers to hal_entry.o(.text.hal_entry) for [Anonymous Symbol]
    hal_entry.o(.text.R_BSP_WarmStart) refers to r_ioport.o(.text.R_IOPORT_Open) for R_IOPORT_Open
    hal_entry.o(.text.R_BSP_WarmStart) refers to common_data.o(.bss.g_ioport_ctrl) for g_ioport_ctrl
    hal_entry.o(.text.R_BSP_WarmStart) refers to pin_data.o(.rodata.g_bsp_pin_cfg) for g_bsp_pin_cfg
    hal_entry.o(.ARM.exidx.text.R_BSP_WarmStart) refers to hal_entry.o(.text.R_BSP_WarmStart) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) for SEGGER_RTT_ReadUpBufferNoLock
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Read) refers to segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Read) refers to segger_rtt.o(.text.SEGGER_RTT_Read) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) for SEGGER_RTT_WriteDownBufferNoLock
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Write) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.text.SEGGER_RTT_WriteString) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.text.SEGGER_RTT_PutChar) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.text.SEGGER_RTT_GetKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WaitKey) refers to segger_rtt.o(.text.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WaitKey) refers to segger_rtt.o(.text.SEGGER_RTT_WaitKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.text.SEGGER_RTT_HasKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasData) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasData) refers to segger_rtt.o(.text.SEGGER_RTT_HasData) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasDataUp) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasDataUp) refers to segger_rtt.o(.text.SEGGER_RTT_HasDataUp) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Init) refers to segger_rtt.o(.text.SEGGER_RTT_Init) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.rodata.cst16) for _aTerminalId
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._ActiveTerminal) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text.SEGGER_RTT_SetTerminal) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.rodata.str1.1) for .L.str
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.rodata.cst16) for _aTerminalId
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._ActiveTerminal) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text.SEGGER_RTT_TerminalOut) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetBytesInBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer) for [Anonymous Symbol]
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) for [Anonymous Symbol]
    segger_rtt_printf.o(.text._PrintUnsigned) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(.ARM.exidx.text._PrintUnsigned) refers to segger_rtt_printf.o(.text._PrintUnsigned) for [Anonymous Symbol]
    segger_rtt_printf.o(.text.SEGGER_RTT_printf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_printf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for [Anonymous Symbol]
    uart_ep.o(.ARM.exidx.text.crc_calculate) refers to uart_ep.o(.text.crc_calculate) for [Anonymous Symbol]
    uart_ep.o(.text.uart_ep_demo) refers to uart_ep.o(.rodata.CODELESS) for CODELESS
    uart_ep.o(.text.uart_ep_demo) refers to uart_ep.o(.bss.CRC) for CRC
    uart_ep.o(.text.uart_ep_demo) refers to uart_ep.o(.bss.g_data_received_flag) for [Anonymous Symbol]
    uart_ep.o(.ARM.exidx.text.uart_ep_demo) refers to uart_ep.o(.text.uart_ep_demo) for [Anonymous Symbol]
    uart_ep.o(.text.uart_initialize) refers to r_sci_uart.o(.text.R_SCI_UART_Open) for R_SCI_UART_Open
    uart_ep.o(.text.uart_initialize) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    uart_ep.o(.text.uart_initialize) refers to hal_data.o(.bss.g_uart0_ctrl) for g_uart0_ctrl
    uart_ep.o(.text.uart_initialize) refers to hal_data.o(.rodata.g_uart0_cfg) for g_uart0_cfg
    uart_ep.o(.text.uart_initialize) refers to uart_ep.o(.rodata.str1.1) for .L.str
    uart_ep.o(.ARM.exidx.text.uart_initialize) refers to uart_ep.o(.text.uart_initialize) for [Anonymous Symbol]
    uart_ep.o(.text.deinit_uart) refers to r_sci_uart.o(.text.R_SCI_UART_Close) for R_SCI_UART_Close
    uart_ep.o(.text.deinit_uart) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    uart_ep.o(.text.deinit_uart) refers to hal_data.o(.bss.g_uart0_ctrl) for g_uart0_ctrl
    uart_ep.o(.text.deinit_uart) refers to uart_ep.o(.rodata.str1.1) for .L.str
    uart_ep.o(.ARM.exidx.text.deinit_uart) refers to uart_ep.o(.text.deinit_uart) for [Anonymous Symbol]
    uart_ep.o(.text.user_uart_callback) refers to r_sci_uart.o(.text.R_SCI_UART_Write) for R_SCI_UART_Write
    uart_ep.o(.text.user_uart_callback) refers to uart_ep.o(.bss.g_data_received_flag) for [Anonymous Symbol]
    uart_ep.o(.text.user_uart_callback) refers to uart_ep.o(.bss.uart_state) for uart_state
    uart_ep.o(.text.user_uart_callback) refers to uart_ep.o(.bss.CRC) for CRC
    uart_ep.o(.text.user_uart_callback) refers to hal_data.o(.bss.g_uart0_ctrl) for g_uart0_ctrl
    uart_ep.o(.text.user_uart_callback) refers to uart_ep.o(.rodata.CODELESS) for CODELESS
    uart_ep.o(.text.user_uart_callback) refers to uart_ep.o(.bss.g_uart_event) for g_uart_event
    uart_ep.o(.ARM.exidx.text.user_uart_callback) refers to uart_ep.o(.text.user_uart_callback) for [Anonymous Symbol]
    board_init.o(.ARM.exidx.text.bsp_init) refers to board_init.o(.text.bsp_init) for [Anonymous Symbol]
    board_leds.o(.rodata.g_bsp_leds) refers to board_leds.o(.rodata.g_bsp_prv_leds) for [Anonymous Symbol]
    startup.o(.text.Reset_Handler) refers to system.o(.text.SystemInit) for SystemInit
    startup.o(.text.Reset_Handler) refers to main.o(.text.main) for main
    startup.o(.ARM.exidx.text.Reset_Handler) refers to startup.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup.o(.ARM.exidx.text.Default_Handler) refers to startup.o(.text.Default_Handler) for [Anonymous Symbol]
    startup.o(.fixed_vectors) refers to startup.o(.bss.stack) for [Anonymous Symbol]
    startup.o(.fixed_vectors) refers to startup.o(.text.Reset_Handler) for Reset_Handler
    startup.o(.fixed_vectors) refers to bsp_group_irq.o(.text.NMI_Handler) for NMI_Handler
    startup.o(.fixed_vectors) refers to startup.o(.text.Default_Handler) for HardFault_Handler
    system.o(.text.SystemInit) refers to hal_entry.o(.text.R_BSP_WarmStart) for R_BSP_WarmStart
    system.o(.text.SystemInit) refers to bsp_clocks.o(.text.bsp_clock_init) for bsp_clock_init
    system.o(.text.SystemInit) refers to bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable) for R_BSP_RegisterProtectDisable
    system.o(.text.SystemInit) refers to bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable) for R_BSP_RegisterProtectEnable
    system.o(.text.SystemInit) refers to memseta.o(.text) for __aeabi_memclr4
    system.o(.text.SystemInit) refers to memcpya.o(.text) for __aeabi_memcpy4
    system.o(.text.SystemInit) refers to bsp_clocks.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system.o(.text.SystemInit) refers to bsp_irq.o(.text.bsp_irq_cfg) for bsp_irq_cfg
    system.o(.text.SystemInit) refers to board_init.o(.text.bsp_init) for bsp_init
    system.o(.text.SystemInit) refers to startup.o(.fixed_vectors) for __Vectors
    system.o(.ARM.exidx.text.SystemInit) refers to system.o(.text.SystemInit) for [Anonymous Symbol]
    system.o(.ARM.exidx.text.R_BSP_WarmStart) refers to system.o(.text.R_BSP_WarmStart) for [Anonymous Symbol]
    bsp_clocks.o(.ARM.exidx.text.bsp_prv_operating_mode_set) refers to bsp_clocks.o(.text.bsp_prv_operating_mode_set) for [Anonymous Symbol]
    bsp_clocks.o(.text.SystemCoreClockUpdate) refers to bsp_clocks.o(.bss.noinit) for [Anonymous Symbol]
    bsp_clocks.o(.text.SystemCoreClockUpdate) refers to system.o(.bss.SystemCoreClock) for SystemCoreClock
    bsp_clocks.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to bsp_clocks.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    bsp_clocks.o(.text.bsp_prv_clock_set) refers to bsp_clocks.o(.bss.noinit) for [Anonymous Symbol]
    bsp_clocks.o(.text.bsp_prv_clock_set) refers to system.o(.bss.SystemCoreClock) for SystemCoreClock
    bsp_clocks.o(.ARM.exidx.text.bsp_prv_clock_set) refers to bsp_clocks.o(.text.bsp_prv_clock_set) for [Anonymous Symbol]
    bsp_clocks.o(.text.bsp_clock_init) refers to bsp_clocks.o(.bss.noinit) for [Anonymous Symbol]
    bsp_clocks.o(.text.bsp_clock_init) refers to system.o(.bss.SystemCoreClock) for SystemCoreClock
    bsp_clocks.o(.ARM.exidx.text.bsp_clock_init) refers to bsp_clocks.o(.text.bsp_clock_init) for [Anonymous Symbol]
    bsp_clocks.o(.ARM.exidx.text.R_BSP_OctaclkUpdate) refers to bsp_clocks.o(.text.R_BSP_OctaclkUpdate) for [Anonymous Symbol]
    bsp_common.o(.ARM.exidx.text.bsp_init_internal) refers to bsp_common.o(.text.bsp_init_internal) for [Anonymous Symbol]
    bsp_common.o(.ARM.exidx.text.R_FSP_VersionGet) refers to bsp_common.o(.text.R_FSP_VersionGet) for [Anonymous Symbol]
    bsp_common.o(.ARM.exidx.text.__aeabi_assert) refers to bsp_common.o(.text.__aeabi_assert) for [Anonymous Symbol]
    bsp_delay.o(.text.R_BSP_SoftwareDelay) refers to llmul.o(.text) for __aeabi_lmul
    bsp_delay.o(.text.R_BSP_SoftwareDelay) refers to bsp_delay.o(.text.bsp_prv_software_delay_loop) for bsp_prv_software_delay_loop
    bsp_delay.o(.text.R_BSP_SoftwareDelay) refers to system.o(.bss.SystemCoreClock) for SystemCoreClock
    bsp_delay.o(.ARM.exidx.text.R_BSP_SoftwareDelay) refers to bsp_delay.o(.text.R_BSP_SoftwareDelay) for [Anonymous Symbol]
    bsp_delay.o(.ARM.exidx.text.bsp_prv_software_delay_loop) refers to bsp_delay.o(.text.bsp_prv_software_delay_loop) for [Anonymous Symbol]
    bsp_group_irq.o(.text.R_BSP_GroupIrqWrite) refers to bsp_group_irq.o(.bss.g_bsp_group_irq_sources) for [Anonymous Symbol]
    bsp_group_irq.o(.ARM.exidx.text.R_BSP_GroupIrqWrite) refers to bsp_group_irq.o(.text.R_BSP_GroupIrqWrite) for [Anonymous Symbol]
    bsp_group_irq.o(.text.NMI_Handler) refers to bsp_group_irq.o(.bss.g_bsp_group_irq_sources) for [Anonymous Symbol]
    bsp_group_irq.o(.ARM.exidx.text.NMI_Handler) refers to bsp_group_irq.o(.text.NMI_Handler) for [Anonymous Symbol]
    bsp_irq.o(.text.bsp_irq_cfg) refers to vector_data.o(.rodata.g_interrupt_event_link_select) for g_interrupt_event_link_select
    bsp_irq.o(.ARM.exidx.text.bsp_irq_cfg) refers to bsp_irq.o(.text.bsp_irq_cfg) for [Anonymous Symbol]
    bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable) refers to bsp_register_protection.o(.bss.g_protect_counters) for [Anonymous Symbol]
    bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable) refers to bsp_register_protection.o(.rodata.cst8) for g_prcr_masks
    bsp_register_protection.o(.ARM.exidx.text.R_BSP_RegisterProtectEnable) refers to bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable) for [Anonymous Symbol]
    bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable) refers to bsp_register_protection.o(.bss.g_protect_counters) for [Anonymous Symbol]
    bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable) refers to bsp_register_protection.o(.rodata.cst8) for g_prcr_masks
    bsp_register_protection.o(.ARM.exidx.text.R_BSP_RegisterProtectDisable) refers to bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable) for [Anonymous Symbol]
    r_ioport.o(.text.R_IOPORT_Open) refers to bsp_io.o(.bss.g_protect_pfswe_counter) for g_protect_pfswe_counter
    r_ioport.o(.ARM.exidx.text.R_IOPORT_Open) refers to r_ioport.o(.text.R_IOPORT_Open) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_Close) refers to r_ioport.o(.text.R_IOPORT_Close) for [Anonymous Symbol]
    r_ioport.o(.text.R_IOPORT_PinsCfg) refers to bsp_io.o(.bss.g_protect_pfswe_counter) for g_protect_pfswe_counter
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinsCfg) refers to r_ioport.o(.text.R_IOPORT_PinsCfg) for [Anonymous Symbol]
    r_ioport.o(.text.R_IOPORT_PinCfg) refers to bsp_io.o(.bss.g_protect_pfswe_counter) for g_protect_pfswe_counter
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinCfg) refers to r_ioport.o(.text.R_IOPORT_PinCfg) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinEventInputRead) refers to r_ioport.o(.text.R_IOPORT_PinEventInputRead) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinEventOutputWrite) refers to r_ioport.o(.text.R_IOPORT_PinEventOutputWrite) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_EthernetModeCfg) refers to r_ioport.o(.text.R_IOPORT_EthernetModeCfg) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinRead) refers to r_ioport.o(.text.R_IOPORT_PinRead) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PinWrite) refers to r_ioport.o(.text.R_IOPORT_PinWrite) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PortDirectionSet) refers to r_ioport.o(.text.R_IOPORT_PortDirectionSet) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PortEventInputRead) refers to r_ioport.o(.text.R_IOPORT_PortEventInputRead) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PortEventOutputWrite) refers to r_ioport.o(.text.R_IOPORT_PortEventOutputWrite) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PortRead) refers to r_ioport.o(.text.R_IOPORT_PortRead) for [Anonymous Symbol]
    r_ioport.o(.ARM.exidx.text.R_IOPORT_PortWrite) refers to r_ioport.o(.text.R_IOPORT_PortWrite) for [Anonymous Symbol]
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_Open) for R_IOPORT_Open
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_Close) for R_IOPORT_Close
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinsCfg) for R_IOPORT_PinsCfg
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinCfg) for R_IOPORT_PinCfg
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinEventInputRead) for R_IOPORT_PinEventInputRead
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinEventOutputWrite) for R_IOPORT_PinEventOutputWrite
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_EthernetModeCfg) for R_IOPORT_EthernetModeCfg
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinRead) for R_IOPORT_PinRead
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PinWrite) for R_IOPORT_PinWrite
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PortDirectionSet) for R_IOPORT_PortDirectionSet
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PortEventInputRead) for R_IOPORT_PortEventInputRead
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PortEventOutputWrite) for R_IOPORT_PortEventOutputWrite
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PortRead) for R_IOPORT_PortRead
    r_ioport.o(.rodata.g_ioport_on_ioport) refers to r_ioport.o(.text.R_IOPORT_PortWrite) for R_IOPORT_PortWrite
    r_sci_uart.o(.text.R_SCI_UART_Open) refers to bsp_irq.o(.bss.gp_renesas_isr_context) for gp_renesas_isr_context
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Open) refers to r_sci_uart.o(.text.R_SCI_UART_Open) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Read) refers to r_sci_uart.o(.text.R_SCI_UART_Read) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Write) refers to r_sci_uart.o(.text.R_SCI_UART_Write) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_BaudSet) refers to r_sci_uart.o(.text.R_SCI_UART_BaudSet) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_InfoGet) refers to r_sci_uart.o(.text.R_SCI_UART_InfoGet) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Abort) refers to r_sci_uart.o(.text.R_SCI_UART_Abort) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_CallbackSet) refers to r_sci_uart.o(.text.R_SCI_UART_CallbackSet) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Close) refers to r_sci_uart.o(.text.R_SCI_UART_Close) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_ReadStop) refers to r_sci_uart.o(.text.R_SCI_UART_ReadStop) for [Anonymous Symbol]
    r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) refers to llmul.o(.text) for __aeabi_lmul
    r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) refers to ldiv.o(.text) for __aeabi_ldivmod
    r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) refers to system.o(.bss.SystemCoreClock) for SystemCoreClock
    r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) refers to r_sci_uart.o(.rodata.g_async_baud) for [Anonymous Symbol]
    r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) refers to r_sci_uart.o(.rodata.g_div_coefficient) for [Anonymous Symbol]
    r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_BaudCalculate) refers to r_sci_uart.o(.text.R_SCI_UART_BaudCalculate) for [Anonymous Symbol]
    r_sci_uart.o(.text.sci_uart_txi_isr) refers to bsp_irq.o(.bss.gp_renesas_isr_context) for gp_renesas_isr_context
    r_sci_uart.o(.ARM.exidx.text.sci_uart_txi_isr) refers to r_sci_uart.o(.text.sci_uart_txi_isr) for [Anonymous Symbol]
    r_sci_uart.o(.text.sci_uart_rxi_isr) refers to memcpya.o(.text) for __aeabi_memcpy
    r_sci_uart.o(.text.sci_uart_rxi_isr) refers to bsp_irq.o(.bss.gp_renesas_isr_context) for gp_renesas_isr_context
    r_sci_uart.o(.ARM.exidx.text.sci_uart_rxi_isr) refers to r_sci_uart.o(.text.sci_uart_rxi_isr) for [Anonymous Symbol]
    r_sci_uart.o(.text.sci_uart_tei_isr) refers to bsp_irq.o(.bss.gp_renesas_isr_context) for gp_renesas_isr_context
    r_sci_uart.o(.ARM.exidx.text.sci_uart_tei_isr) refers to r_sci_uart.o(.text.sci_uart_tei_isr) for [Anonymous Symbol]
    r_sci_uart.o(.text.sci_uart_eri_isr) refers to bsp_irq.o(.bss.gp_renesas_isr_context) for gp_renesas_isr_context
    r_sci_uart.o(.ARM.exidx.text.sci_uart_eri_isr) refers to r_sci_uart.o(.text.sci_uart_eri_isr) for [Anonymous Symbol]
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_Open) for R_SCI_UART_Open
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_Read) for R_SCI_UART_Read
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_Write) for R_SCI_UART_Write
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_BaudSet) for R_SCI_UART_BaudSet
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_InfoGet) for R_SCI_UART_InfoGet
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_Abort) for R_SCI_UART_Abort
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_CallbackSet) for R_SCI_UART_CallbackSet
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_Close) for R_SCI_UART_Close
    r_sci_uart.o(.rodata.g_uart_on_sci) refers to r_sci_uart.o(.text.R_SCI_UART_ReadStop) for R_SCI_UART_ReadStop
    common_data.o(.ARM.exidx.text.g_common_init) refers to common_data.o(.text.g_common_init) for [Anonymous Symbol]
    common_data.o(.rodata.g_ioport) refers to common_data.o(.bss.g_ioport_ctrl) for g_ioport_ctrl
    common_data.o(.rodata.g_ioport) refers to pin_data.o(.rodata.g_bsp_pin_cfg) for g_bsp_pin_cfg
    common_data.o(.rodata.g_ioport) refers to r_ioport.o(.rodata.g_ioport_on_ioport) for g_ioport_on_ioport
    hal_data.o(.text.g_hal_init) refers to common_data.o(.text.g_common_init) for g_common_init
    hal_data.o(.ARM.exidx.text.g_hal_init) refers to hal_data.o(.text.g_hal_init) for [Anonymous Symbol]
    hal_data.o(.rodata.g_uart0_cfg_extend) refers to hal_data.o(.data.g_uart0_baud_setting) for g_uart0_baud_setting
    hal_data.o(.rodata.g_uart0_cfg) refers to uart_ep.o(.text.user_uart_callback) for user_uart_callback
    hal_data.o(.rodata.g_uart0_cfg) refers to hal_data.o(.rodata.g_uart0_cfg_extend) for g_uart0_cfg_extend
    hal_data.o(.rodata.g_uart0) refers to hal_data.o(.bss.g_uart0_ctrl) for g_uart0_ctrl
    hal_data.o(.rodata.g_uart0) refers to hal_data.o(.rodata.g_uart0_cfg) for g_uart0_cfg
    hal_data.o(.rodata.g_uart0) refers to r_sci_uart.o(.rodata.g_uart_on_sci) for g_uart_on_sci
    main.o(.text.main) refers to hal_entry.o(.text.hal_entry) for hal_entry
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    pin_data.o(.rodata.g_bsp_pin_cfg) refers to pin_data.o(.rodata.g_bsp_pin_cfg_data) for g_bsp_pin_cfg_data
    vector_data.o(.application_vectors) refers to r_sci_uart.o(.text.sci_uart_rxi_isr) for sci_uart_rxi_isr
    vector_data.o(.application_vectors) refers to r_sci_uart.o(.text.sci_uart_txi_isr) for sci_uart_txi_isr
    vector_data.o(.application_vectors) refers to r_sci_uart.o(.text.sci_uart_tei_isr) for sci_uart_tei_isr
    vector_data.o(.application_vectors) refers to r_sci_uart.o(.text.sci_uart_eri_isr) for sci_uart_eri_isr
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl


==============================================================================

Removing Unused input sections from the image.

    Removing hal_entry.o(.text), (0 bytes).
    Removing hal_entry.o(.ARM.exidx.text.hal_entry), (8 bytes).
    Removing hal_entry.o(.ARM.exidx.text.R_BSP_WarmStart), (8 bytes).
    Removing segger_rtt.o(.text), (0 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock), (228 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBufferNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadNoLock), (228 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer), (26 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_Read), (26 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Read), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock), (176 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteWithOverwriteNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock), (124 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteSkipNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock), (380 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBufferNoLock), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBuffer), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Write), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteString), (152 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteString), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock), (52 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkipNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_PutCharSkip), (172 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkip), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_PutChar), (192 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutChar), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetKey), (252 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WaitKey), (12 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WaitKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasKey), (124 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasData), (20 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasData), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasDataUp), (20 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasDataUp), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer), (196 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer), (196 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer), (180 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer), (184 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_Init), (108 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Init), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetTerminal), (360 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_TerminalOut), (1120 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_TerminalOut), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace), (36 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetAvailWriteSpace), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer), (32 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetBytesInBuffer), (8 bytes).
    Removing segger_rtt.o(.rodata.cst16), (16 bytes).
    Removing segger_rtt.o(.bss._ActiveTerminal), (1 bytes).
    Removing segger_rtt_printf.o(.text), (0 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_vprintf), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text._PrintUnsigned), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_printf), (8 bytes).
    Removing uart_ep.o(.text), (0 bytes).
    Removing uart_ep.o(.text.crc_calculate), (18 bytes).
    Removing uart_ep.o(.ARM.exidx.text.crc_calculate), (8 bytes).
    Removing uart_ep.o(.ARM.exidx.text.uart_ep_demo), (8 bytes).
    Removing uart_ep.o(.ARM.exidx.text.uart_initialize), (8 bytes).
    Removing uart_ep.o(.ARM.exidx.text.deinit_uart), (8 bytes).
    Removing uart_ep.o(.ARM.exidx.text.user_uart_callback), (8 bytes).
    Removing uart_ep.o(.rodata.CODELESS_CRC), (1 bytes).
    Removing uart_ep.o(.rodata.CODELESS_SIZE), (2 bytes).
    Removing uart_ep.o(.bss.BSP_IO_PORT_02_PIN_07_status), (4 bytes).
    Removing boot_da14531.o(.text), (0 bytes).
    Removing board_init.o(.text), (0 bytes).
    Removing board_init.o(.ARM.exidx.text.bsp_init), (8 bytes).
    Removing board_leds.o(.text), (0 bytes).
    Removing board_leds.o(.rodata.g_bsp_prv_leds), (6 bytes).
    Removing board_leds.o(.rodata.g_bsp_leds), (8 bytes).
    Removing startup.o(.text), (0 bytes).
    Removing startup.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing system.o(.text), (0 bytes).
    Removing system.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system.o(.text.R_BSP_WarmStart), (2 bytes).
    Removing system.o(.ARM.exidx.text.R_BSP_WarmStart), (8 bytes).
    Removing bsp_clocks.o(.text), (0 bytes).
    Removing bsp_clocks.o(.text.bsp_prv_operating_mode_set), (88 bytes).
    Removing bsp_clocks.o(.ARM.exidx.text.bsp_prv_operating_mode_set), (8 bytes).
    Removing bsp_clocks.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing bsp_clocks.o(.text.bsp_prv_clock_set), (100 bytes).
    Removing bsp_clocks.o(.ARM.exidx.text.bsp_prv_clock_set), (8 bytes).
    Removing bsp_clocks.o(.ARM.exidx.text.bsp_clock_init), (8 bytes).
    Removing bsp_clocks.o(.text.R_BSP_OctaclkUpdate), (2 bytes).
    Removing bsp_clocks.o(.ARM.exidx.text.R_BSP_OctaclkUpdate), (8 bytes).
    Removing bsp_common.o(.text), (0 bytes).
    Removing bsp_common.o(.text.bsp_init_internal), (2 bytes).
    Removing bsp_common.o(.ARM.exidx.text.bsp_init_internal), (8 bytes).
    Removing bsp_common.o(.ARM.exidx.text.R_FSP_VersionGet), (8 bytes).
    Removing bsp_common.o(.text.__aeabi_assert), (4 bytes).
    Removing bsp_common.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing bsp_delay.o(.text), (0 bytes).
    Removing bsp_delay.o(.text.R_BSP_SoftwareDelay), (96 bytes).
    Removing bsp_delay.o(.ARM.exidx.text.R_BSP_SoftwareDelay), (8 bytes).
    Removing bsp_delay.o(.text.bsp_prv_software_delay_loop), (8 bytes).
    Removing bsp_delay.o(.ARM.exidx.text.bsp_prv_software_delay_loop), (8 bytes).
    Removing bsp_group_irq.o(.text), (0 bytes).
    Removing bsp_group_irq.o(.text.R_BSP_GroupIrqWrite), (20 bytes).
    Removing bsp_group_irq.o(.ARM.exidx.text.R_BSP_GroupIrqWrite), (8 bytes).
    Removing bsp_group_irq.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing bsp_guard.o(.text), (0 bytes).
    Removing bsp_io.o(.text), (0 bytes).
    Removing bsp_irq.o(.text), (0 bytes).
    Removing bsp_irq.o(.ARM.exidx.text.bsp_irq_cfg), (8 bytes).
    Removing bsp_irq.o(.rodata.g_interrupt_event_link_select), (128 bytes).
    Removing bsp_register_protection.o(.text), (0 bytes).
    Removing bsp_register_protection.o(.ARM.exidx.text.R_BSP_RegisterProtectEnable), (8 bytes).
    Removing bsp_register_protection.o(.ARM.exidx.text.R_BSP_RegisterProtectDisable), (8 bytes).
    Removing bsp_rom_registers.o(.text), (0 bytes).
    Removing bsp_sbrk.o(.text), (0 bytes).
    Removing bsp_security.o(.text), (0 bytes).
    Removing r_ioport.o(.text), (0 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_Open), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_Close), (32 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_Close), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinsCfg), (232 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinsCfg), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinCfg), (176 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinCfg), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinEventInputRead), (76 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinEventInputRead), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinEventOutputWrite), (124 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinEventOutputWrite), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_EthernetModeCfg), (4 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_EthernetModeCfg), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinRead), (56 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinRead), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PinWrite), (64 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PinWrite), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PortDirectionSet), (64 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PortDirectionSet), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PortEventInputRead), (56 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PortEventInputRead), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PortEventOutputWrite), (64 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PortEventOutputWrite), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PortRead), (48 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PortRead), (8 bytes).
    Removing r_ioport.o(.text.R_IOPORT_PortWrite), (60 bytes).
    Removing r_ioport.o(.ARM.exidx.text.R_IOPORT_PortWrite), (8 bytes).
    Removing r_ioport.o(.rodata.g_ioport_on_ioport), (56 bytes).
    Removing r_sci_uart.o(.text), (0 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Open), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_Read), (64 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Read), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Write), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_BaudSet), (96 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_BaudSet), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_InfoGet), (36 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_InfoGet), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_Abort), (64 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Abort), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_CallbackSet), (36 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_CallbackSet), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_Close), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_ReadStop), (36 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_ReadStop), (8 bytes).
    Removing r_sci_uart.o(.text.R_SCI_UART_BaudCalculate), (408 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.R_SCI_UART_BaudCalculate), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.sci_uart_txi_isr), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.sci_uart_rxi_isr), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.sci_uart_tei_isr), (8 bytes).
    Removing r_sci_uart.o(.ARM.exidx.text.sci_uart_eri_isr), (8 bytes).
    Removing r_sci_uart.o(.rodata.g_uart_on_sci), (36 bytes).
    Removing r_sci_uart.o(.rodata.g_async_baud), (13 bytes).
    Removing r_sci_uart.o(.rodata.g_div_coefficient), (26 bytes).
    Removing common_data.o(.text), (0 bytes).
    Removing common_data.o(.text.g_common_init), (2 bytes).
    Removing common_data.o(.ARM.exidx.text.g_common_init), (8 bytes).
    Removing common_data.o(.rodata.g_ioport), (12 bytes).
    Removing hal_data.o(.text), (0 bytes).
    Removing hal_data.o(.text.g_hal_init), (4 bytes).
    Removing hal_data.o(.ARM.exidx.text.g_hal_init), (8 bytes).
    Removing hal_data.o(.rodata.g_uart0), (12 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing pin_data.o(.text), (0 bytes).
    Removing vector_data.o(.text), (0 bytes).

197 unused section(s) (total 8547 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    SEGGER_RTT.c                             0x00000000   Number         0  segger_rtt.o ABSOLUTE
    SEGGER_RTT_printf.c                      0x00000000   Number         0  segger_rtt_printf.o ABSOLUTE
    __tagsym$$used.1                         0x00000000   Number         0  startup.o(.fixed_vectors)
    board_init.c                             0x00000000   Number         0  board_init.o ABSOLUTE
    board_leds.c                             0x00000000   Number         0  board_leds.o ABSOLUTE
    boot_da14531.c                           0x00000000   Number         0  boot_da14531.o ABSOLUTE
    bsp_clocks.c                             0x00000000   Number         0  bsp_clocks.o ABSOLUTE
    bsp_common.c                             0x00000000   Number         0  bsp_common.o ABSOLUTE
    bsp_delay.c                              0x00000000   Number         0  bsp_delay.o ABSOLUTE
    bsp_group_irq.c                          0x00000000   Number         0  bsp_group_irq.o ABSOLUTE
    bsp_guard.c                              0x00000000   Number         0  bsp_guard.o ABSOLUTE
    bsp_io.c                                 0x00000000   Number         0  bsp_io.o ABSOLUTE
    bsp_irq.c                                0x00000000   Number         0  bsp_irq.o ABSOLUTE
    bsp_register_protection.c                0x00000000   Number         0  bsp_register_protection.o ABSOLUTE
    bsp_rom_registers.c                      0x00000000   Number         0  bsp_rom_registers.o ABSOLUTE
    bsp_sbrk.c                               0x00000000   Number         0  bsp_sbrk.o ABSOLUTE
    bsp_security.c                           0x00000000   Number         0  bsp_security.o ABSOLUTE
    common_data.c                            0x00000000   Number         0  common_data.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    hal_data.c                               0x00000000   Number         0  hal_data.o ABSOLUTE
    hal_entry.c                              0x00000000   Number         0  hal_entry.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    pin_data.c                               0x00000000   Number         0  pin_data.o ABSOLUTE
    r_ioport.c                               0x00000000   Number         0  r_ioport.o ABSOLUTE
    r_sci_uart.c                             0x00000000   Number         0  r_sci_uart.o ABSOLUTE
    startup.c                                0x00000000   Number         0  startup.o ABSOLUTE
    system.c                                 0x00000000   Number         0  system.o ABSOLUTE
    uart_ep.c                                0x00000000   Number         0  uart_ep.o ABSOLUTE
    vector_data.c                            0x00000000   Number         0  vector_data.o ABSOLUTE
    __tagsym$$used.0                         0x00000040   Number         0  vector_data.o(.application_vectors)
    __tagsym$$used.0                         0x00000400   Number         0  bsp_rom_registers.o(.rom_registers)
    g_bsp_rom_registers                      0x00000400   Data          60  bsp_rom_registers.o(.rom_registers)
    [Anonymous Symbol]                       0x00000400   Section        0  bsp_rom_registers.o(.rom_registers)
    .text                                    0x00000500   Section        0  memcpya.o(.text)
    .text                                    0x00000524   Section        0  memseta.o(.text)
    [Anonymous Symbol]                       0x00000548   Section        0  startup.o(.text.Default_Handler)
    [Anonymous Symbol]                       0x0000054c   Section        0  bsp_group_irq.o(.text.NMI_Handler)
    __arm_cp.1_0                             0x0000057c   Number         4  bsp_group_irq.o(.text.NMI_Handler)
    __arm_cp.1_1                             0x00000580   Number         4  bsp_group_irq.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x00000584   Section        0  bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable)
    [Anonymous Symbol]                       0x000005b8   Section        0  bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable)
    __arm_cp.0_0                             0x000005f8   Number         4  bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable)
    __arm_cp.0_1                             0x000005fc   Number         4  bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable)
    __arm_cp.0_2                             0x00000600   Number         4  bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable)
    [Anonymous Symbol]                       0x00000604   Section        0  hal_entry.o(.text.R_BSP_WarmStart)
    __arm_cp.1_0                             0x0000061c   Number         4  hal_entry.o(.text.R_BSP_WarmStart)
    __arm_cp.1_1                             0x00000620   Number         4  hal_entry.o(.text.R_BSP_WarmStart)
    __arm_cp.1_2                             0x00000624   Number         4  hal_entry.o(.text.R_BSP_WarmStart)
    [Anonymous Symbol]                       0x00000628   Section        0  bsp_common.o(.text.R_FSP_VersionGet)
    __arm_cp.1_0                             0x00000638   Number         4  bsp_common.o(.text.R_FSP_VersionGet)
    [Anonymous Symbol]                       0x0000063c   Section        0  r_ioport.o(.text.R_IOPORT_Open)
    __arm_cp.0_0                             0x00000714   Number         4  r_ioport.o(.text.R_IOPORT_Open)
    __arm_cp.0_1                             0x00000718   Number         4  r_ioport.o(.text.R_IOPORT_Open)
    __arm_cp.0_2                             0x0000071c   Number         4  r_ioport.o(.text.R_IOPORT_Open)
    __arm_cp.0_3                             0x00000720   Number         4  r_ioport.o(.text.R_IOPORT_Open)
    [Anonymous Symbol]                       0x00000724   Section        0  r_sci_uart.o(.text.R_SCI_UART_Close)
    __arm_cp.7_0                             0x000007cc   Number         4  r_sci_uart.o(.text.R_SCI_UART_Close)
    __arm_cp.7_1                             0x000007d0   Number         4  r_sci_uart.o(.text.R_SCI_UART_Close)
    __arm_cp.7_2                             0x000007d4   Number         4  r_sci_uart.o(.text.R_SCI_UART_Close)
    [Anonymous Symbol]                       0x000007d8   Section        0  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_0                             0x00000ba4   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_1                             0x00000ba8   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_2                             0x00000bac   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_3                             0x00000bb0   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_4                             0x00000bb4   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_5                             0x00000bb8   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_6                             0x00000bbc   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_7                             0x00000bc0   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_8                             0x00000bc4   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_9                             0x00000bc8   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    __arm_cp.0_10                            0x00000bcc   Number         4  r_sci_uart.o(.text.R_SCI_UART_Open)
    [Anonymous Symbol]                       0x00000bd0   Section        0  r_sci_uart.o(.text.R_SCI_UART_Write)
    __arm_cp.2_0                             0x00000c44   Number         4  r_sci_uart.o(.text.R_SCI_UART_Write)
    [Anonymous Symbol]                       0x00000c48   Section        0  startup.o(.text.Reset_Handler)
    [Anonymous Symbol]                       0x00000c54   Section        0  segger_rtt.o(.text.SEGGER_RTT_Write)
    __arm_cp.9_1                             0x00000cd4   Number         4  segger_rtt.o(.text.SEGGER_RTT_Write)
    __arm_cp.9_2                             0x00000cd8   Number         4  segger_rtt.o(.text.SEGGER_RTT_Write)
    __arm_cp.9_3                             0x00000cdc   Number         4  segger_rtt.o(.text.SEGGER_RTT_Write)
    __arm_cp.9_4                             0x00000ce0   Number         4  segger_rtt.o(.text.SEGGER_RTT_Write)
    [Anonymous Symbol]                       0x00000ce4   Section        0  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    __arm_cp.7_0                             0x00000e5c   Number         4  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    [Anonymous Symbol]                       0x00000e60   Section        0  segger_rtt_printf.o(.text.SEGGER_RTT_printf)
    [Anonymous Symbol]                       0x00000e80   Section        0  segger_rtt_printf.o(.text.SEGGER_RTT_vprintf)
    [Anonymous Symbol]                       0x000013f8   Section        0  bsp_clocks.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_0                             0x00001410   Number         4  bsp_clocks.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00001414   Section        0  system.o(.text.SystemInit)
    __arm_cp.0_0                             0x000014f4   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_1                             0x000014f8   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_2                             0x000014fc   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_3                             0x00001500   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_4                             0x00001504   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_5                             0x00001508   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_6                             0x0000150c   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_7                             0x00001510   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_8                             0x00001514   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_9                             0x00001518   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_10                            0x0000151c   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_11                            0x00001520   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_12                            0x00001524   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_13                            0x00001528   Number         4  system.o(.text.SystemInit)
    __arm_cp.0_14                            0x0000152c   Number         4  system.o(.text.SystemInit)
    _PrintUnsigned                           0x00001531   Thumb Code   424  segger_rtt_printf.o(.text._PrintUnsigned)
    [Anonymous Symbol]                       0x00001530   Section        0  segger_rtt_printf.o(.text._PrintUnsigned)
    _PrintUnsigned._aV2C                     0x000016c8   Number         0  segger_rtt_printf.o(.text._PrintUnsigned)
    [Anonymous Symbol]                       0x000016d8   Section        0  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_0                             0x00001780   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_1                             0x00001784   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_2                             0x00001788   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_3                             0x0000178c   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_4                             0x00001790   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_5                             0x00001794   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_6                             0x00001798   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_7                             0x0000179c   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_8                             0x000017a0   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_9                             0x000017a4   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_10                            0x000017a8   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    __arm_cp.3_11                            0x000017ac   Number         4  bsp_clocks.o(.text.bsp_clock_init)
    [Anonymous Symbol]                       0x000017b0   Section        0  board_init.o(.text.bsp_init)
    [Anonymous Symbol]                       0x000017b4   Section        0  bsp_irq.o(.text.bsp_irq_cfg)
    __arm_cp.0_0                             0x000017c8   Number         4  bsp_irq.o(.text.bsp_irq_cfg)
    __arm_cp.0_1                             0x000017cc   Number         4  bsp_irq.o(.text.bsp_irq_cfg)
    [Anonymous Symbol]                       0x000017d0   Section        0  uart_ep.o(.text.deinit_uart)
    __arm_cp.3_0                             0x000017f0   Number         4  uart_ep.o(.text.deinit_uart)
    __arm_cp.3_1                             0x000017f4   Number         4  uart_ep.o(.text.deinit_uart)
    [Anonymous Symbol]                       0x00001830   Section        0  hal_entry.o(.text.hal_entry)
    __arm_cp.0_0                             0x000018b4   Number         4  hal_entry.o(.text.hal_entry)
    __arm_cp.0_1                             0x000018b8   Number         4  hal_entry.o(.text.hal_entry)
    __arm_cp.0_2                             0x000018bc   Number         4  hal_entry.o(.text.hal_entry)
    __arm_cp.0_3                             0x000018c0   Number         4  hal_entry.o(.text.hal_entry)
    [Anonymous Symbol]                       0x00001908   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00001914   Section        0  r_sci_uart.o(.text.sci_uart_eri_isr)
    [Anonymous Symbol]                       0x000019ac   Section        0  r_sci_uart.o(.text.sci_uart_rxi_isr)
    [Anonymous Symbol]                       0x00001a90   Section        0  r_sci_uart.o(.text.sci_uart_tei_isr)
    __arm_cp.12_0                            0x00001b08   Number         4  r_sci_uart.o(.text.sci_uart_tei_isr)
    __arm_cp.12_2                            0x00001b0c   Number         4  r_sci_uart.o(.text.sci_uart_tei_isr)
    [Anonymous Symbol]                       0x00001b10   Section        0  r_sci_uart.o(.text.sci_uart_txi_isr)
    __arm_cp.10_0                            0x00001bd4   Number         4  r_sci_uart.o(.text.sci_uart_txi_isr)
    __arm_cp.10_1                            0x00001bd8   Number         4  r_sci_uart.o(.text.sci_uart_txi_isr)
    [Anonymous Symbol]                       0x00001bdc   Section        0  uart_ep.o(.text.uart_ep_demo)
    [Anonymous Symbol]                       0x00001c04   Section        0  uart_ep.o(.text.uart_initialize)
    __arm_cp.2_0                             0x00001c24   Number         4  uart_ep.o(.text.uart_initialize)
    __arm_cp.2_1                             0x00001c28   Number         4  uart_ep.o(.text.uart_initialize)
    __arm_cp.2_2                             0x00001c2c   Number         4  uart_ep.o(.text.uart_initialize)
    [Anonymous Symbol]                       0x00001c68   Section        0  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_0                             0x00001ce8   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_1                             0x00001cec   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_2                             0x00001cf0   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_3                             0x00001cf4   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_4                             0x00001cf8   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_5                             0x00001cfc   Number         4  uart_ep.o(.text.user_uart_callback)
    __arm_cp.4_6                             0x00001d00   Number         4  uart_ep.o(.text.user_uart_callback)
    g_prcr_masks                             0x0000a464   Data           8  bsp_register_protection.o(.rodata.cst8)
    .L.str.2                                 0x0000a58c   Data           7  segger_rtt.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000a58c   Section        0  segger_rtt.o(.rodata.str1.1)
    .L.str                                   0x0000a593   Data           9  segger_rtt.o(.rodata.str1.1)
    .L.str                                   0x0000a59c   Data          28  uart_ep.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000a59c   Section        0  uart_ep.o(.rodata.str1.1)
    __tagsym$$used.0                         0x0000a5b8   Number         0  bsp_common.o(.version)
    g_fsp_version                            0x0000a5b8   Data           4  bsp_common.o(.version)
    [Anonymous Symbol]                       0x0000a5b8   Section        0  bsp_common.o(.version)
    __tagsym$$used.1                         0x0000a5bc   Number         0  bsp_common.o(.version)
    g_fsp_version_string                     0x0000a5bc   Data           6  bsp_common.o(.version)
    __tagsym$$used.2                         0x0000a5c2   Number         0  bsp_common.o(.version)
    g_fsp_version_build_string               0x0000a5c2   Data          68  bsp_common.o(.version)
    __tagsym$$used.1                         0x01010018   Number         0  bsp_rom_registers.o(.id_code)
    g_bsp_id_codes                           0x01010018   Data          28  bsp_rom_registers.o(.id_code)
    [Anonymous Symbol]                       0x01010018   Section        0  bsp_rom_registers.o(.id_code)
    _acDownBuffer                            0x200040b4   Data          16  segger_rtt.o(.bss._acDownBuffer)
    [Anonymous Symbol]                       0x200040b4   Section        0  segger_rtt.o(.bss._acDownBuffer)
    _acUpBuffer                              0x200040c4   Data        1024  segger_rtt.o(.bss._acUpBuffer)
    [Anonymous Symbol]                       0x200040c4   Section        0  segger_rtt.o(.bss._acUpBuffer)
    g_bsp_group_irq_sources                  0x200044c4   Data          64  bsp_group_irq.o(.bss.g_bsp_group_irq_sources)
    [Anonymous Symbol]                       0x200044c4   Section        0  bsp_group_irq.o(.bss.g_bsp_group_irq_sources)
    g_data_received_flag                     0x20004504   Data           1  uart_ep.o(.bss.g_data_received_flag)
    [Anonymous Symbol]                       0x20004504   Section        0  uart_ep.o(.bss.g_data_received_flag)
    g_protect_counters                       0x20004510   Data           8  bsp_register_protection.o(.bss.g_protect_counters)
    [Anonymous Symbol]                       0x20004510   Section        0  bsp_register_protection.o(.bss.g_protect_counters)
    __tagsym$$used.0                         0x200045d4   Number         0  bsp_clocks.o(.bss.noinit)
    g_clock_freq                             0x200045d4   Data          20  bsp_clocks.o(.bss.noinit)
    [Anonymous Symbol]                       0x200045d4   Section        0  bsp_clocks.o(.bss.noinit)
    __tagsym$$used.2                         0x200045e8   Number         0  startup.o(.bss.heap)
    g_heap                                   0x200045e8   Data        1024  startup.o(.bss.heap)
    [Anonymous Symbol]                       0x200045e8   Section        0  startup.o(.bss.heap)
    __tagsym$$used.0                         0x200049e8   Number         0  startup.o(.bss.stack)
    g_main_stack                             0x200049e8   Data        1024  startup.o(.bss.stack)
    [Anonymous Symbol]                       0x200049e8   Section        0  startup.o(.bss.stack)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$8M$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$WCHAR32$ENUMINT$~SHL$OTIME$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data          64  startup.o(.fixed_vectors)
    Image$$DATA$$Length                      0x00000004   Number         0  anon$$obj.o ABSOLUTE
    g_vector_table                           0x00000040   Data         128  vector_data.o(.application_vectors)
    Image$$STACK$$ZI$$Length                 0x00000400   Number         0  anon$$obj.o ABSOLUTE
    Image$$INIT_ARRAY$$Base                  0x00000500   Number         0  anon$$obj.o ABSOLUTE
    Image$$INIT_ARRAY$$Limit                 0x00000500   Number         0  anon$$obj.o ABSOLUTE
    __aeabi_memcpy                           0x00000501   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000501   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000501   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000525   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000525   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000525   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000533   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000533   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000533   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000537   Thumb Code    18  memseta.o(.text)
    BusFault_Handler                         0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    DebugMon_Handler                         0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    Default_Handler                          0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    HardFault_Handler                        0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    MemManage_Handler                        0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    PendSV_Handler                           0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    SVC_Handler                              0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    SecureFault_Handler                      0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    SysTick_Handler                          0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    UsageFault_Handler                       0x00000549   Thumb Code     4  startup.o(.text.Default_Handler)
    NMI_Handler                              0x0000054d   Thumb Code    56  bsp_group_irq.o(.text.NMI_Handler)
    R_BSP_RegisterProtectDisable             0x00000585   Thumb Code    52  bsp_register_protection.o(.text.R_BSP_RegisterProtectDisable)
    R_BSP_RegisterProtectEnable              0x000005b9   Thumb Code    76  bsp_register_protection.o(.text.R_BSP_RegisterProtectEnable)
    Image$$BSS$$ZI$$Length                   0x000005d0   Number         0  anon$$obj.o ABSOLUTE
    R_BSP_WarmStart                          0x00000605   Thumb Code    36  hal_entry.o(.text.R_BSP_WarmStart)
    R_FSP_VersionGet                         0x00000629   Thumb Code    20  bsp_common.o(.text.R_FSP_VersionGet)
    R_IOPORT_Open                            0x0000063d   Thumb Code   232  r_ioport.o(.text.R_IOPORT_Open)
    R_SCI_UART_Close                         0x00000725   Thumb Code   180  r_sci_uart.o(.text.R_SCI_UART_Close)
    R_SCI_UART_Open                          0x000007d9   Thumb Code  1016  r_sci_uart.o(.text.R_SCI_UART_Open)
    R_SCI_UART_Write                         0x00000bd1   Thumb Code   120  r_sci_uart.o(.text.R_SCI_UART_Write)
    Reset_Handler                            0x00000c49   Thumb Code    10  startup.o(.text.Reset_Handler)
    SEGGER_RTT_Write                         0x00000c55   Thumb Code   144  segger_rtt.o(.text.SEGGER_RTT_Write)
    SEGGER_RTT_WriteNoLock                   0x00000ce5   Thumb Code   380  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    SEGGER_RTT_printf                        0x00000e61   Thumb Code    30  segger_rtt_printf.o(.text.SEGGER_RTT_printf)
    SEGGER_RTT_vprintf                       0x00000e81   Thumb Code  1398  segger_rtt_printf.o(.text.SEGGER_RTT_vprintf)
    SystemCoreClockUpdate                    0x000013f9   Thumb Code    28  bsp_clocks.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00001415   Thumb Code   284  system.o(.text.SystemInit)
    bsp_clock_init                           0x000016d9   Thumb Code   216  bsp_clocks.o(.text.bsp_clock_init)
    bsp_init                                 0x000017b1   Thumb Code     2  board_init.o(.text.bsp_init)
    bsp_irq_cfg                              0x000017b5   Thumb Code    28  bsp_irq.o(.text.bsp_irq_cfg)
    deinit_uart                              0x000017d1   Thumb Code    96  uart_ep.o(.text.deinit_uart)
    hal_entry                                0x00001831   Thumb Code   216  hal_entry.o(.text.hal_entry)
    main                                     0x00001909   Thumb Code    10  main.o(.text.main)
    sci_uart_eri_isr                         0x00001915   Thumb Code   152  r_sci_uart.o(.text.sci_uart_eri_isr)
    sci_uart_rxi_isr                         0x000019ad   Thumb Code   228  r_sci_uart.o(.text.sci_uart_rxi_isr)
    sci_uart_tei_isr                         0x00001a91   Thumb Code   128  r_sci_uart.o(.text.sci_uart_tei_isr)
    sci_uart_txi_isr                         0x00001b11   Thumb Code   204  r_sci_uart.o(.text.sci_uart_txi_isr)
    uart_ep_demo                             0x00001bdd   Thumb Code    40  uart_ep.o(.text.uart_ep_demo)
    uart_initialize                          0x00001c05   Thumb Code   100  uart_ep.o(.text.uart_initialize)
    user_uart_callback                       0x00001c69   Thumb Code   156  uart_ep.o(.text.user_uart_callback)
    CODELESS                                 0x00001d04   Data       34656  uart_ep.o(.rodata.CODELESS)
    g_bsp_pin_cfg                            0x0000a46c   Data           8  pin_data.o(.rodata.g_bsp_pin_cfg)
    g_bsp_pin_cfg_data                       0x0000a474   Data          56  pin_data.o(.rodata.g_bsp_pin_cfg_data)
    g_interrupt_event_link_select            0x0000a4ac   Data         128  vector_data.o(.rodata.g_interrupt_event_link_select)
    g_uart0_cfg                              0x0000a52c   Data          68  hal_data.o(.rodata.g_uart0_cfg)
    g_uart0_cfg_extend                       0x0000a570   Data          28  hal_data.o(.rodata.g_uart0_cfg_extend)
    Load$$DATA$$Base                         0x0000a608   Number         0  anon$$obj.o ABSOLUTE
    Image$$DATA$$Base                        0x20004000   Number         0  anon$$obj.o ABSOLUTE
    g_uart0_baud_setting                     0x20004000   Data           4  hal_data.o(.data.g_uart0_baud_setting)
    CRC                                      0x20004004   Data           4  uart_ep.o(.bss.CRC)
    Image$$BSS$$ZI$$Base                     0x20004004   Number         0  anon$$obj.o ABSOLUTE
    SystemCoreClock                          0x20004008   Data           4  system.o(.bss.SystemCoreClock)
    _SEGGER_RTT                              0x2000400c   Data         168  segger_rtt.o(.bss._SEGGER_RTT)
    g_ioport_ctrl                            0x20004508   Data           8  common_data.o(.bss.g_ioport_ctrl)
    g_protect_pfswe_counter                  0x20004518   Data           4  bsp_io.o(.bss.g_protect_pfswe_counter)
    g_uart0_ctrl                             0x2000451c   Data          48  hal_data.o(.bss.g_uart0_ctrl)
    g_uart_event                             0x2000454c   Data           1  uart_ep.o(.bss.g_uart_event)
    gp_renesas_isr_context                   0x20004550   Data         128  bsp_irq.o(.bss.gp_renesas_isr_context)
    uart_state                               0x200045d0   Data           4  uart_ep.o(.bss.uart_state)
    Image$$STACK$$ZI$$Base                   0x200049e8   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000c49

  Load Region LOAD_REGION_FLASH (Base: 0x00000000, Size: 0x0000c000, Max: 0x00020000, ABSOLUTE)

    Execution Region __tz_FLASH_S (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000        -       0x00000000   Zero   RW            1    __tz_FLASH_S.bss    anon$$obj.o


    Execution Region VECTORS (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000000c0, Max: 0xffffffff, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000040   Data   RO          177    .fixed_vectors      startup.o
    0x00000040   0x00000040   0x00000080   Data   RO          413    .application_vectors  vector_data.o


    Execution Region VECTORS_FILL (Exec base: 0x000000c0, Load base: 0x000000c0, Size: 0x00000340, Max: 0x00000340, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x000000c0        -       0x00000340   Zero   RW            2    VECTORS_FILL.bss    anon$$obj.o


    Execution Region ROM_REGISTERS (Exec base: 0x00000400, Load base: 0x00000400, Size: 0x0000003c, Max: 0xffffffff, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000400   0x00000400   0x0000003c   Data   RO          289    .rom_registers      bsp_rom_registers.o


    Execution Region ROM_REGISTERS_FILL (Exec base: 0x0000043c, Load base: 0x0000043c, Size: 0x000000c4, Max: 0x000000c4, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x0000043c        -       0x000000c4   Zero   RW            3    ROM_REGISTERS_FILL.bss  anon$$obj.o


    Execution Region INIT_ARRAY (Exec base: 0x00000500, Load base: 0x00000500, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region USB_DESC_FS (Exec base: 0x00000500, Load base: 0x00000500, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region RO_CODE_DATA (Exec base: 0x00000500, Load base: 0x00000500, Size: 0x0000a108, Max: 0xffffffff, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000500   0x00000500   0x00000024   Code   RO          425    .text               mc_p.l(memcpya.o)
    0x00000524   0x00000524   0x00000024   Code   RO          427    .text               mc_p.l(memseta.o)
    0x00000548   0x00000548   0x00000004   Code   RO          174    .text.Default_Handler  startup.o
    0x0000054c   0x0000054c   0x00000038   Code   RO          247    .text.NMI_Handler   bsp_group_irq.o
    0x00000584   0x00000584   0x00000034   Code   RO          277    .text.R_BSP_RegisterProtectDisable  bsp_register_protection.o
    0x000005b8   0x000005b8   0x0000004c   Code   RO          275    .text.R_BSP_RegisterProtectEnable  bsp_register_protection.o
    0x00000604   0x00000604   0x00000024   Code   RO           27    .text.R_BSP_WarmStart  hal_entry.o
    0x00000628   0x00000628   0x00000014   Code   RO          220    .text.R_FSP_VersionGet  bsp_common.o
    0x0000063c   0x0000063c   0x000000e8   Code   RO          298    .text.R_IOPORT_Open  r_ioport.o
    0x00000724   0x00000724   0x000000b4   Code   RO          349    .text.R_SCI_UART_Close  r_sci_uart.o
    0x000007d8   0x000007d8   0x000003f8   Code   RO          335    .text.R_SCI_UART_Open  r_sci_uart.o
    0x00000bd0   0x00000bd0   0x00000078   Code   RO          339    .text.R_SCI_UART_Write  r_sci_uart.o
    0x00000c48   0x00000c48   0x0000000a   Code   RO          172  * .text.Reset_Handler  startup.o
    0x00000c52   0x00000c52   0x00000002   PAD
    0x00000c54   0x00000c54   0x00000090   Code   RO           55    .text.SEGGER_RTT_Write  segger_rtt.o
    0x00000ce4   0x00000ce4   0x0000017c   Code   RO           51    .text.SEGGER_RTT_WriteNoLock  segger_rtt.o
    0x00000e60   0x00000e60   0x0000001e   Code   RO          119    .text.SEGGER_RTT_printf  segger_rtt_printf.o
    0x00000e7e   0x00000e7e   0x00000002   PAD
    0x00000e80   0x00000e80   0x00000576   Code   RO          115    .text.SEGGER_RTT_vprintf  segger_rtt_printf.o
    0x000013f6   0x000013f6   0x00000002   PAD
    0x000013f8   0x000013f8   0x0000001c   Code   RO          201    .text.SystemCoreClockUpdate  bsp_clocks.o
    0x00001414   0x00001414   0x0000011c   Code   RO          186    .text.SystemInit    system.o
    0x00001530   0x00001530   0x000001a8   Code   RO          117    .text._PrintUnsigned  segger_rtt_printf.o
    0x000016d8   0x000016d8   0x000000d8   Code   RO          205    .text.bsp_clock_init  bsp_clocks.o
    0x000017b0   0x000017b0   0x00000002   Code   RO          157    .text.bsp_init      board_init.o
    0x000017b2   0x000017b2   0x00000002   PAD
    0x000017b4   0x000017b4   0x0000001c   Code   RO          265    .text.bsp_irq_cfg   bsp_irq.o
    0x000017d0   0x000017d0   0x00000060   Code   RO          135    .text.deinit_uart   uart_ep.o
    0x00001830   0x00001830   0x000000d8   Code   RO           25    .text.hal_entry     hal_entry.o
    0x00001908   0x00001908   0x0000000a   Code   RO          397    .text.main          main.o
    0x00001912   0x00001912   0x00000002   PAD
    0x00001914   0x00001914   0x00000098   Code   RO          361    .text.sci_uart_eri_isr  r_sci_uart.o
    0x000019ac   0x000019ac   0x000000e4   Code   RO          357    .text.sci_uart_rxi_isr  r_sci_uart.o
    0x00001a90   0x00001a90   0x00000080   Code   RO          359    .text.sci_uart_tei_isr  r_sci_uart.o
    0x00001b10   0x00001b10   0x000000cc   Code   RO          355    .text.sci_uart_txi_isr  r_sci_uart.o
    0x00001bdc   0x00001bdc   0x00000028   Code   RO          131    .text.uart_ep_demo  uart_ep.o
    0x00001c04   0x00001c04   0x00000064   Code   RO          133    .text.uart_initialize  uart_ep.o
    0x00001c68   0x00001c68   0x0000009c   Code   RO          137    .text.user_uart_callback  uart_ep.o
    0x00001d04   0x00001d04   0x00008760   Data   RO          139    .rodata.CODELESS    uart_ep.o
    0x0000a464   0x0000a464   0x00000008   Data   RO          280    .rodata.cst8        bsp_register_protection.o
    0x0000a46c   0x0000a46c   0x00000008   Data   RO          407    .rodata.g_bsp_pin_cfg  pin_data.o
    0x0000a474   0x0000a474   0x00000038   Data   RO          406    .rodata.g_bsp_pin_cfg_data  pin_data.o
    0x0000a4ac   0x0000a4ac   0x00000080   Data   RO          414    .rodata.g_interrupt_event_link_select  vector_data.o
    0x0000a52c   0x0000a52c   0x00000044   Data   RO          388    .rodata.g_uart0_cfg  hal_data.o
    0x0000a570   0x0000a570   0x0000001c   Data   RO          387    .rodata.g_uart0_cfg_extend  hal_data.o
    0x0000a58c   0x0000a58c   0x00000010   Data   RO          104    .rodata.str1.1      segger_rtt.o
    0x0000a59c   0x0000a59c   0x0000001c   Data   RO          145    .rodata.str1.1      uart_ep.o
    0x0000a5b8   0x0000a5b8   0x0000004e   Data   RO          224    .version            bsp_common.o


    Execution Region __tz_RAM_S (Exec base: 0x20004000, Load base: 0x0000a608, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20004000        -       0x00000000   Zero   RW            4    __tz_RAM_S.bss      anon$$obj.o


    Execution Region DTC_VECTOR_TABLE (Exec base: 0x20004000, Load base: 0x0000a608, Size: 0x00000000, Max: 0x00004000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region DATA (Exec base: 0x20004000, Load base: 0x0000a608, Size: 0x00000004, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20004000   0x0000a608   0x00000004   Data   RW          386    .data.g_uart0_baud_setting  hal_data.o


    Execution Region BSS (Exec base: 0x20004004, Load base: 0x0000a60c, Size: 0x000005d0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20004004        -       0x00000004   Zero   RW          143    .bss.CRC            uart_ep.o
    0x20004008        -       0x00000004   Zero   RW          190    .bss.SystemCoreClock  system.o
    0x2000400c        -       0x000000a8   Zero   RW          101    .bss._SEGGER_RTT    segger_rtt.o
    0x200040b4        -       0x00000010   Zero   RW          106    .bss._acDownBuffer  segger_rtt.o
    0x200040c4        -       0x00000400   Zero   RW          105    .bss._acUpBuffer    segger_rtt.o
    0x200044c4        -       0x00000040   Zero   RW          249    .bss.g_bsp_group_irq_sources  bsp_group_irq.o
    0x20004504        -       0x00000001   Zero   RW          144    .bss.g_data_received_flag  uart_ep.o
    0x20004505   0x0000a60c   0x00000003   PAD
    0x20004508        -       0x00000008   Zero   RW          376    .bss.g_ioport_ctrl  common_data.o
    0x20004510        -       0x00000008   Zero   RW          279    .bss.g_protect_counters  bsp_register_protection.o
    0x20004518        -       0x00000004   Zero   RW          259    .bss.g_protect_pfswe_counter  bsp_io.o
    0x2000451c        -       0x00000030   Zero   RW          389    .bss.g_uart0_ctrl   hal_data.o
    0x2000454c        -       0x00000001   Zero   RW          142    .bss.g_uart_event   uart_ep.o
    0x2000454d   0x0000a60c   0x00000003   PAD
    0x20004550        -       0x00000080   Zero   RW          268    .bss.gp_renesas_isr_context  bsp_irq.o
    0x200045d0        -       0x00000004   Zero   RW          146    .bss.uart_state     uart_ep.o


    Execution Region NOINIT (Exec base: 0x200045d4, Load base: 0x0000a60c, Size: 0x00000014, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200045d4        -       0x00000014   Zero   RW          209    .bss.noinit         bsp_clocks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x200045e8, Load base: 0x0000a610, Size: 0x00000400, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200045e8        -       0x00000400   Zero   RW          178    .bss.heap           startup.o


    Execution Region ARM_LIB_STACK (Exec base: 0x200049e8, Load base: 0x0000a610, Size: 0x00000000, Max: 0x00000000, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200049e8        -       0x00000000   Zero   RW            5    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region STACK (Exec base: 0x200049e8, Load base: 0x0000a610, Size: 0x00000400, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200049e8        -       0x00000400   Zero   RW          176    .bss.stack          startup.o


    Execution Region RAM_END (Exec base: 0x20004de8, Load base: 0x0000a610, Size: 0x00000004, Max: 0x00000004, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20004de8        -       0x00000004   Zero   RW            6    RAM_END.bss         anon$$obj.o


    Execution Region __tz_RAM_C (Exec base: 0x20005000, Load base: 0x0000a800, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20005000        -       0x00000000   Zero   RW            7    __tz_RAM_C.bss      anon$$obj.o


    Execution Region __tz_RAM_N (Exec base: 0x20006000, Load base: 0x0000c000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20006000        -       0x00000000   Zero   RW            8    __tz_RAM_N.bss      anon$$obj.o


    Execution Region RAM_LIMIT (Exec base: 0x20008000, Load base: 0x0000c000, Size: 0x00000004, Max: 0x00000004, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20008000        -       0x00000004   Zero   RW            9    RAM_LIMIT.bss       anon$$obj.o



  Load Region LOAD_REGION_NSC_FLASH (Base: 0x00010000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    Execution Region __tz_FLASH_C (Exec base: 0x00010000, Load base: 0x00010000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00010000        -       0x00000000   Zero   RW           10    __tz_FLASH_C.bss    anon$$obj.o


    Execution Region EXEC_NSCR (Exec base: 0x00010000, Load base: 0x00010000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_FLASH_N (Exec base: 0x00010000, Load base: 0x00010000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00010000        -       0x00000000   Zero   RW           11    __tz_FLASH_N.bss    anon$$obj.o



  Load Region LOAD_REGION_ID_CODE (Base: 0x01010018, Size: 0x0000001c, Max: 0x00000020, ABSOLUTE)

    Execution Region __tz_ID_CODE_S (Exec base: 0x01010018, Load base: 0x01010018, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x01010018        -       0x00000000   Zero   RW           12    __tz_ID_CODE_S.bss  anon$$obj.o


    Execution Region ID_CODE (Exec base: 0x01010018, Load base: 0x01010018, Size: 0x0000001c, Max: 0xffffffff, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x01010018   0x01010018   0x0000001c   Data   RO          290    .id_code            bsp_rom_registers.o


    Execution Region __tz_ID_CODE_N (Exec base: 0x01010034, Load base: 0x01010034, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x01010034        -       0x00000000   Zero   RW           13    __tz_ID_CODE_N.bss  anon$$obj.o



  Load Region LOAD_REGION_DATA_FLASH (Base: 0x40100000, Size: 0x00000000, Max: 0x00001000, ABSOLUTE)

    Execution Region __tz_DATA_FLASH_S (Exec base: 0x40100000, Load base: 0x40100000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40100000        -       0x00000000   Zero   RW           14    __tz_DATA_FLASH_S.bss  anon$$obj.o


    Execution Region DATA_FLASH (Exec base: 0x40100000, Load base: 0x40100000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_DATA_FLASH_N (Exec base: 0x40100000, Load base: 0x40100000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40100000        -       0x00000000   Zero   RW           15    __tz_DATA_FLASH_N.bss  anon$$obj.o



  Load Region LOAD_REGION_QSPI_FLASH (Base: 0x60000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region __tz_QSPI_FLASH_S (Exec base: 0x60000000, Load base: 0x60000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x60000000        -       0x00000000   Zero   RW           16    __tz_QSPI_FLASH_S.bss  anon$$obj.o


    Execution Region QSPI_FLASH (Exec base: 0x60000000, Load base: 0x60000000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_QSPI_FLASH_N (Exec base: 0x60000000, Load base: 0x60000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x60000000        -       0x00000000   Zero   RW           17    __tz_QSPI_FLASH_N.bss  anon$$obj.o



  Load Region LOAD_REGION_OSPI_DEVICE_0 (Base: 0x68000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region __tz_OSPI_DEVICE_0_S (Exec base: 0x68000000, Load base: 0x68000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x68000000        -       0x00000000   Zero   RW           18    __tz_OSPI_DEVICE_0_S.bss  anon$$obj.o


    Execution Region OSPI_DEVICE_0 (Exec base: 0x68000000, Load base: 0x68000000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_OSPI_DEVICE_0_N (Exec base: 0x68000000, Load base: 0x68000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x68000000        -       0x00000000   Zero   RW           19    __tz_OSPI_DEVICE_0_N.bss  anon$$obj.o



  Load Region LOAD_REGION_OSPI_DEVICE_1 (Base: 0x70000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region __tz_OSPI_DEVICE_1_S (Exec base: 0x70000000, Load base: 0x70000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x70000000        -       0x00000000   Zero   RW           20    __tz_OSPI_DEVICE_1_S.bss  anon$$obj.o


    Execution Region OSPI_DEVICE_1 (Exec base: 0x70000000, Load base: 0x70000000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_OSPI_DEVICE_1_N (Exec base: 0x70000000, Load base: 0x70000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x70000000        -       0x00000000   Zero   RW           21    __tz_OSPI_DEVICE_1_N.bss  anon$$obj.o



  Load Region LOAD_REGION_SDRAM (Base: 0x90000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region __tz_SDRAM_S (Exec base: 0x90000000, Load base: 0x90000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x90000000        -       0x00000000   Zero   RW           22    __tz_SDRAM_S.bss    anon$$obj.o


    Execution Region SDRAM (Exec base: 0x90000000, Load base: 0x90000000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE, FIXED)

    **** No section assigned to this execution region ****


    Execution Region __tz_SDRAM_N (Exec base: 0x90000000, Load base: 0x90000000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x90000000        -       0x00000000   Zero   RW           23    __tz_SDRAM_N.bss    anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         2          0          0          0          0        650   board_init.o
       244         52          0          0         20      25233   bsp_clocks.o
        20          4         78          0          0       9345   bsp_common.o
        56          8          0          0         64      13350   bsp_group_irq.o
         0          0          0          0          4        704   bsp_io.o
        28          8          0          0        128       8827   bsp_irq.o
       128         12          8          0          8      20043   bsp_register_protection.o
         0          0         88          0          0        829   bsp_rom_registers.o
         0          0          0          0          8      15979   common_data.o
         0          0         96          4         48      27733   hal_data.o
       252         96          0          0          0      21506   hal_entry.o
        10          0          0          0          0        505   main.o
         0          0         64          0          0       6686   pin_data.o
       232         16          0          0          0      31261   r_ioport.o
      2028         76          0          0          0      66801   r_sci_uart.o
       524         20         16          0       1208      29266   segger_rtt.o
      1852         16          0          0          0       7534   segger_rtt_printf.o
        14          0         64          0       2048       1153   startup.o
       284         60          0          0          4      10408   system.o
       392        160      34684          0         10      10924   uart_ep.o
         0          0        256          0          0       4716   vector_data.o

    ----------------------------------------------------------------------
      6076        528      35356          4       4592     313453   Object Totals
         0          0          0          0       1036          0   (incl. Generated)
        10          0          2          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o

    ----------------------------------------------------------------------
        72          0          0          0          0        160   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

        72          0          0          0          0        160   mc_p.l

    ----------------------------------------------------------------------
        72          0          0          0          0        160   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6148        528      35356          4       4592     313345   Grand Totals
      6148        528      35356          4       4592     313345   ELF Image Totals
      6148        528      35356          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                41504 (  40.53kB)
    Total RW  Size (RW Data + ZI Data)              4596 (   4.49kB)
    Total ROM Size (Code + RO Data + RW Data)      41508 (  40.54kB)

==============================================================================

